/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { trigger, state, style, animate, transition, } from '@angular/animations';
/**
 * This animation controls the popover panel's entry and exit from the page.
 *
 * When the popover panel is added to the DOM, it scales in and fades in its border.
 *
 * When the popover panel is removed from the DOM, it simply fades out after a brief
 * delay to display the ripple.
 * @type {?}
 */
export const transformPopover = trigger('transformPopover', [
    state('enter', style({
        opacity: 1,
        transform: `scale(1)`
    })),
    transition('void => *', [
        style({
            opacity: 0,
            transform: `scale(0)`
        }),
        animate(`200ms cubic-bezier(0.25, 0.8, 0.25, 1)`)
    ]),
    transition('* => void', [
        animate('50ms 100ms linear', style({ opacity: 0 }))
    ])
]);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG9wb3Zlci1hbmltYXRpb25zLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQG1hdGVyaWFsLWV4dGVuZGVkL21kZS8iLCJzb3VyY2VzIjpbImxpYi9wb3BvdmVyL3BvcG92ZXItYW5pbWF0aW9ucy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUNMLE9BQU8sRUFDUCxLQUFLLEVBQ0wsS0FBSyxFQUNMLE9BQU8sRUFDUCxVQUFVLEdBRVgsTUFBTSxxQkFBcUIsQ0FBQzs7Ozs7Ozs7OztBQWdCN0IsTUFBTSxPQUFPLGdCQUFnQixHQUE2QixPQUFPLENBQUMsa0JBQWtCLEVBQUU7SUFDcEYsS0FBSyxDQUFDLE9BQU8sRUFBRSxLQUFLLENBQUM7UUFDbkIsT0FBTyxFQUFFLENBQUM7UUFDVixTQUFTLEVBQUUsVUFBVTtLQUN0QixDQUFDLENBQUM7SUFDSCxVQUFVLENBQUMsV0FBVyxFQUFFO1FBQ3RCLEtBQUssQ0FBQztZQUNKLE9BQU8sRUFBRSxDQUFDO1lBQ1YsU0FBUyxFQUFFLFVBQVU7U0FDdEIsQ0FBQztRQUNGLE9BQU8sQ0FBQyx3Q0FBd0MsQ0FBQztLQUNsRCxDQUFDO0lBQ0YsVUFBVSxDQUFDLFdBQVcsRUFBRTtRQUN0QixPQUFPLENBQUMsbUJBQW1CLEVBQUUsS0FBSyxDQUFDLEVBQUMsT0FBTyxFQUFFLENBQUMsRUFBQyxDQUFDLENBQUM7S0FDbEQsQ0FBQztDQUNILENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xyXG4gIHRyaWdnZXIsXHJcbiAgc3RhdGUsXHJcbiAgc3R5bGUsXHJcbiAgYW5pbWF0ZSxcclxuICB0cmFuc2l0aW9uLFxyXG4gIEFuaW1hdGlvblRyaWdnZXJNZXRhZGF0YSxcclxufSBmcm9tICdAYW5ndWxhci9hbmltYXRpb25zJztcclxuXHJcbi8qKlxyXG4gKiBCZWxvdyBhcmUgYWxsIHRoZSBhbmltYXRpb25zIGZvciB0aGUgbWQtcG9wb3ZlciBjb21wb25lbnQuXHJcbiAqIEFuaW1hdGlvbiBkdXJhdGlvbiBhbmQgdGltaW5nIHZhbHVlcyBhcmUgYmFzZWQgb24gQW5ndWxhckpTIE1hdGVyaWFsLlxyXG4gKi9cclxuXHJcbi8qKlxyXG4gKiBUaGlzIGFuaW1hdGlvbiBjb250cm9scyB0aGUgcG9wb3ZlciBwYW5lbCdzIGVudHJ5IGFuZCBleGl0IGZyb20gdGhlIHBhZ2UuXHJcbiAqXHJcbiAqIFdoZW4gdGhlIHBvcG92ZXIgcGFuZWwgaXMgYWRkZWQgdG8gdGhlIERPTSwgaXQgc2NhbGVzIGluIGFuZCBmYWRlcyBpbiBpdHMgYm9yZGVyLlxyXG4gKlxyXG4gKiBXaGVuIHRoZSBwb3BvdmVyIHBhbmVsIGlzIHJlbW92ZWQgZnJvbSB0aGUgRE9NLCBpdCBzaW1wbHkgZmFkZXMgb3V0IGFmdGVyIGEgYnJpZWZcclxuICogZGVsYXkgdG8gZGlzcGxheSB0aGUgcmlwcGxlLlxyXG4gKi9cclxuXHJcbmV4cG9ydCBjb25zdCB0cmFuc2Zvcm1Qb3BvdmVyOiBBbmltYXRpb25UcmlnZ2VyTWV0YWRhdGEgPSB0cmlnZ2VyKCd0cmFuc2Zvcm1Qb3BvdmVyJywgW1xyXG4gIHN0YXRlKCdlbnRlcicsIHN0eWxlKHtcclxuICAgIG9wYWNpdHk6IDEsXHJcbiAgICB0cmFuc2Zvcm06IGBzY2FsZSgxKWBcclxuICB9KSksXHJcbiAgdHJhbnNpdGlvbigndm9pZCA9PiAqJywgW1xyXG4gICAgc3R5bGUoe1xyXG4gICAgICBvcGFjaXR5OiAwLFxyXG4gICAgICB0cmFuc2Zvcm06IGBzY2FsZSgwKWBcclxuICAgIH0pLFxyXG4gICAgYW5pbWF0ZShgMjAwbXMgY3ViaWMtYmV6aWVyKDAuMjUsIDAuOCwgMC4yNSwgMSlgKVxyXG4gIF0pLFxyXG4gIHRyYW5zaXRpb24oJyogPT4gdm9pZCcsIFtcclxuICAgIGFuaW1hdGUoJzUwbXMgMTAwbXMgbGluZWFyJywgc3R5bGUoe29wYWNpdHk6IDB9KSlcclxuICBdKVxyXG5dKTtcclxuIl19